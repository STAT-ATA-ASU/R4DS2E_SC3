[
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "References"
  },
  {
    "objectID": "CH09.html",
    "href": "CH09.html",
    "title": "",
    "section": "",
    "text": "Exercises (Chapter 9)\n\nCreate a scatterplot of hwy vs. displ where the points are pink filled in triangles.\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your R code here\n\n\n\nWhy did the following code not result in a plot with blue points?\n\nggplot(mpg) + \n  geom_point(aes(x = displ, y = hwy, color = \"blue\"))\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Proper R code here\n\nYour text answer here.\n\n\nWhat does the stroke aesthetic do? What shapes does it work with? (Hint: use ?geom_point)\n\n\n\n\n\n\nAnswer\n\n\n\n\nmpg |&gt;\n  ggplot(aes(x = displ, y = hwy)) +\n    geom_point(shape = 21, stroke = 0.5) -&gt; p1\nmpg |&gt;\n  ggplot(aes(x = displ, y = hwy)) +\n    geom_point(shape = 21, stroke = 1) -&gt; p2\nmpg |&gt;\n  ggplot(aes(x = displ, y = hwy)) +\n    geom_point(shape = 21, stroke = 2) -&gt; p3\nlibrary(patchwork)\np1 / p2 / p3\n\n\n\n\nYour text answer here.\n\n\nWhat happens if you map an aesthetic to something other than a variable name, like aes(color = displ &lt; 5)? Note, you’ll also need to specify x and y.\n\n\n\n\n\n\nAnswer\n\n\n\n\nmpg |&gt;\n  ggplot(aes(x = displ, y = hwy, color = displ &lt; 5)) +\n    geom_point()\n\n\n\n\nYour text answer here.\n\n\nWhat geom would you use to draw a line chart? A boxplot? A histogram? An area chart?\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n# R Code here\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n# R code here\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n# R code here\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n# Youe R code here\n\n\n\nEarlier in this chapter we used show.legend without explaining it:\n\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_smooth(aes(color = drv), show.legend = FALSE)\n\nWhat does show.legend = FALSE do here? What happens if you remove it? Why do you think we used it earlier?\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_smooth(aes(color = drv), show.legend = FALSE) -&gt; p1\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_smooth(aes(color = drv), show.legend = TRUE) -&gt; p2\np1 / p2\n\n\n\n\n\n\nWhat does the se argument to geom_smooth() do?\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\nggplot(mpg, aes(x = displ, y = hwy, color = drv)) +\n  geom_smooth(se = FALSE)\n\n\n\n\n\n\nRecreate the R code necessary to generate the following graphs. Note that wherever a categorical variable is used in the plot, it’s drv.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\nThe code for each of the plots is given below.\n\n# Your R code here\n\n\n\nWhat happens if you facet on a continuous variable?\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\nmpg |&gt; \n  ggplot(aes(x = drv, y = cyl)) + \n  geom_point() + \n  facet_wrap(~hwy)\n\n\n\n\n\n\nWhat do the empty cells in the plot above with facet_grid(drv ~ cyl) mean? Run the following code. How do they relate to the resulting plot?\n\nggplot(mpg) + \n  geom_point(aes(x = drv, y = cyl))\n\n\n\n\n\n\n\nAnswer\n\n\n\n\nggplot(mpg) + \n  geom_point(aes(x = drv, y = cyl)) +\n  facet_grid(drv ~ cyl)\n\n\n\n\nYour text answer here.\n\n\nWhat plots does the following code make? What does . do?\n\nggplot(mpg) + \n  geom_point(aes(x = displ, y = hwy)) +\n  facet_grid(drv ~ .)\nggplot(mpg) + \n  geom_point(aes(x = displ, y = hwy)) +\n  facet_grid(. ~ cyl)\n\n\n\n\n\n\n\nAnswer\n\n\n\n\nggplot(mpg) + \n  geom_point(aes(x = displ, y = hwy)) +\n  facet_grid(drv ~ .)\n\n\n\n\nYour text answer here.\n\nggplot(mpg) + \n  geom_point(aes(x = displ, y = hwy)) +\n  facet_grid(. ~ cyl)\n\n\n\n\nYour text answer here.\n\n\nTake the first faceted plot in this section:\n\nggplot(mpg) + \n  geom_point(aes(x = displ, y = hwy)) + \n  facet_wrap(~ cyl, nrow = 2)\n\nWhat are the advantages to using faceting instead of the color aesthetic? What are the disadvantages? How might the balance change if you had a larger dataset?\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n# facet\nggplot(mpg) + \n geom_point(aes(x = displ, y = hwy)) + \n  facet_wrap(~ class, nrow = 2)\n\n\n\n# color\nggplot(mpg) + \n  geom_point(aes(x = displ, y = hwy, color = class))\n\n\n\n# both\nggplot(mpg) + \n  geom_point(\n    aes(x = displ, y = hwy, color = class), \n    show.legend = FALSE) + \n facet_wrap(~ class, nrow = 2)\n\n\n\n# highlighting\nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_point(color = \"gray\") +\n  geom_point(\n    data = mpg |&gt; filter(class == \"compact\"),\n    color = \"pink\"\n  )\n\n\n\n\n\n\nRead ?facet_wrap. What does nrow do? What does ncol do? What other options control the layout of the individual panels? Why doesn’t facet_grid() have nrow and ncol arguments?\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\nWhich of the following plots makes it easier to compare engine size (displ) across cars with different drive trains? What does this say about when to place a faceting variable across rows or columns?\n\nggplot(mpg, aes(x = displ)) + \n  geom_histogram() + \n  facet_grid(drv ~ .)\nggplot(mpg, aes(x = displ)) + \n  geom_histogram() +\n  facet_grid(. ~ drv)\n\n\n\n\n\n\n\nAnswer\n\n\n\n\nggplot(mpg, aes(x = displ)) + \n  geom_histogram() + \n  facet_grid(drv ~ .)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(mpg, aes(x = displ)) + \n  geom_histogram() +\n  facet_grid(. ~ drv)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nYour text answer here.\n\n\nRecreate the following plot using facet_wrap() instead of facet_grid(). How do the positions of the facet labels change?\n\nggplot(mpg) + \n  geom_point(aes(x = displ, y = hwy)) +\n  facet_grid(drv ~ .)\n\n\n\n\n\n\n\nAnswer\n\n\n\n\nggplot(mpg) + \n  geom_point(aes(x = displ, y = hwy)) +\n  facet_grid(drv ~ .) -&gt; p1\nggplot(mpg) + \n  geom_point(aes(x = displ, y = hwy)) +\n  facet_wrap(~drv, nrow = 3) -&gt; p2\np1 + p2\n\n\n\n\nYour text answer here.\n\n\nWhat is the default geom associated with stat_summary()? How could you rewrite the previous plot to use that geom function instead of the stat function?\n\nggplot(diamonds) + \n  stat_summary(\n    aes(x = cut, y = depth),\n    fun.min = min,\n    fun.max = max,\n    fun = median\n  )\n\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\ndiamonds |&gt;\n  group_by(cut) |&gt;\n  summarize(\n    lower = min(depth),\n    upper = max(depth),\n    midpoint = median(depth)\n  ) |&gt;\n  ggplot(aes(x = cut, y = midpoint)) +\n  geom_pointrange(aes(ymin = lower, ymax = upper))\n\n\n\n\n\n\nWhat does geom_col() do? How is it different from geom_bar()?\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\nMost geoms and stats come in pairs that are almost always used in concert. Make a list of all the pairs. What do they have in common? (Hint: Read through the documentation.)\n\n\n\n\n\n\nAnswer\n\n\n\nGeoms and stats that are almost always used in concert are listed below:\n\n\n\n\n\ngeom\nstat\n\n\n\n\ngeom_bar()\nstat_count()\n\n\ngeom_bin2d()\nstat_bin_2d()\n\n\ngeom_boxplot()\nstat_boxplot()\n\n\ngeom_contour_filled()\nstat_contour_filled()\n\n\ngeom_contour()\nstat_contour()\n\n\ngeom_count()\nstat_sum()\n\n\ngeom_density_2d()\nstat_density_2d()\n\n\ngeom_density()\nstat_density()\n\n\ngeom_dotplot()\nstat_bindot()\n\n\ngeom_function()\nstat_function()\n\n\ngeom_sf()\nstat_sf()\n\n\ngeom_sf()\nstat_sf()\n\n\ngeom_smooth()\nstat_smooth()\n\n\ngeom_violin()\nstat_ydensity()\n\n\ngeom_hex()\nstat_bin_hex()\n\n\ngeom_qq_line()\nstat_qq_line()\n\n\ngeom_qq()\nstat_qq()\n\n\ngeom_quantile()\nstat_quantile()\n\n\n\nWhat variables does stat_smooth() compute? What arguments control its behavior?\n\n\n\n\n\n\nAnswer\n\n\n\nstat_smooth() computes the following variables:\n\ny or x: Predicted value\nymin or xmin: Lower pointwise confidence interval around the mean\nymax or xmax: Upper pointwise confidence interval around the mean\nse: Standard error\n\n\n\nIn our proportion bar chart, we needed to set group = 1. Why? In other words, what is the problem with these two graphs?\n\nggplot(diamonds, aes(x = cut, y = after_stat(prop))) + \n  geom_bar()\nggplot(diamonds, aes(x = cut, fill = color, y = after_stat(prop))) + \n  geom_bar()\n\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\n\n# one variable\nggplot(diamonds, aes(x = cut, \n                     y = after_stat(prop))) + \n  geom_bar()\nggplot(diamonds, aes(x = cut, \n                     y = after_stat(prop), \n                     group = 1)) + \n  geom_bar()\n# two variables\nggplot(diamonds, aes(x = cut, \n                     fill = color, \n                     y = after_stat(prop))) + \n  geom_bar()\nggplot(diamonds, aes(x = cut, \n                     fill = color, \n                     y = after_stat(prop), \n                     group = color)) + \n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat is the problem with the following plot? How could you improve it?\n\nggplot(mpg, aes(x = cty, y = hwy)) + \n  geom_point()\n\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\n\nggplot(mpg, aes(x = cty, y = hwy)) + \n  geom_point()\nggplot(mpg, aes(x = cty, y = hwy)) + \n  geom_jitter()\n\n\n\n\n\n\n\n\n\n\n\nWhat, if anything, is the difference between the two plots? Why?\n\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point()\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point(position = \"identity\")\n\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\n\n# Your R code here\n\n\n\n\nWhat parameters to geom_jitter() control the amount of jittering?\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\n\nset.seed(321)\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point(color = \"gray\") +\n  geom_jitter(height = 1, width = 1)\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point(color = \"gray\") +\n  geom_jitter(height = 1, width = 5)\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point(color = \"gray\") +\n  geom_jitter(height = 5, width = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCompare and contrast geom_jitter() with geom_count().\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\n\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_jitter()\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_count()\n\n\n\n\n\n\n\n\n\n\n\nWhat’s the default position adjustment for geom_boxplot()? Create a visualization of the mpg dataset that demonstrates it.\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\n\nggplot(mpg, aes(x = drv, y = displ)) +\n  geom_boxplot()\nggplot(mpg, aes(x = drv, y = displ)) +\n  geom_boxplot(position = \"dodge2\")\n\n\n\n\n\n\n\n\n\n\n\nTurn a stacked bar chart into a pie chart using coord_polar().\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\n\n# Your R code here  \n\n\n\n\nWhat’s the difference between coord_quickmap() and coord_map()?\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\nWhat does the following plot tell you about the relationship between city and highway mpg? Why is coord_fixed() important? What does geom_abline() do?\n\nggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +\n  geom_point() + \n  geom_abline() +\n  coord_fixed()\n\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\nggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +\n  geom_point() + \n  geom_abline() +\n  coord_fixed()"
  },
  {
    "objectID": "CH06.html",
    "href": "CH06.html",
    "title": "",
    "section": "",
    "text": "Exercises (Chapter 6)\n\nGo to the RStudio Tips Twitter account, https://twitter.com/rstudiotips and find one tip that looks interesting. Practice using it!\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\nWhat other common mistakes will RStudio diagnostics report? Read https://support.posit.co/hc/en-us/articles/205753617-Code-Diagnostics to find out.\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here."
  },
  {
    "objectID": "CH04.html",
    "href": "CH04.html",
    "title": "",
    "section": "",
    "text": "Exercises (Chapter 4)\n\nRestyle the following pipelines following the guidelines above.\n\nflights|&gt;filter(dest==\"IAH\")|&gt;group_by(year,month,day)|&gt;summarize(n=n(),\ndelay=mean(arr_delay,na.rm=TRUE))|&gt;filter(n&gt;10)\n\nflights|&gt;filter(carrier==\"UA\",dest%in%c(\"IAH\",\"HOU\"),sched_dep_time&gt;\n0900,sched_arr_time&lt;2000)|&gt;group_by(flight)|&gt;summarize(delay=mean(\narr_delay,na.rm=TRUE),cancelled=sum(is.na(arr_delay)),n=n())|&gt;filter(n&gt;10)\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your R code here\n\nProvide an easy way to restyle the code."
  },
  {
    "objectID": "CH02.html",
    "href": "CH02.html",
    "title": "",
    "section": "",
    "text": "Exercises (Chapter 2)\n\nWhy does this code not work?\n\nmy_variable &lt;- 10\nmy_varıable\n\nLook carefully! (This may seem like an exercise in pointlessness, but training your brain to notice even the tiniest difference will pay off when programming.)\n\n\n\n\n\n\nAnswer\n\n\n\nYour answer here.\n\n\nTweak each of the following R commands so that they run correctly:\n\nlibary(todyverse)\nggplot(dTA = mpg) + \n  geom_point(maping = aes(x = displ y = hwy)) +\n  geom_smooth(method = \"lm)\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your R code here\n\n\n\nPress Option + Shift + K / Alt + Shift + K. What happens? How can you get to the same place using the menus?\n\n\n\n\n\n\nAnswer\n\n\n\nYour answer here.\n\n\nLet’s revisit an exercise from “Saving Your Plots”. Run the following lines of code. Which of the two plots is saved as mpg-plot.png? Why?\n\nmy_bar_plot &lt;- ggplot(mpg, aes(x = class)) +\n  geom_bar()\nmy_scatter_plot &lt;- ggplot(mpg, aes(x = cty, y = hwy)) +\n  geom_point()\nggsave(filename = \"mpg-plot.png\", plot = my_bar_plot)\n\n\n\n\n\n\n\nAnswer\n\n\n\n\nmy_bar_plot &lt;- ggplot(mpg, aes(x = class)) +\n  geom_bar()\nmy_scatter_plot &lt;- ggplot(mpg, aes(x = cty, y = hwy)) +\n  geom_point()\nggsave(filename = \"mpg-plot.png\", plot = my_bar_plot)\n\nSaving 7 x 5 in image\n\n\nYour answer here."
  },
  {
    "objectID": "CH01.html",
    "href": "CH01.html",
    "title": "",
    "section": "",
    "text": "Exercises (Chapter 1)\n\nHow many rows are in penguins? How many columns?\n\n\n\n\n\n\nAnswer\n\n\n\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n# Your R Code here\n\nYour answer here.\n\n\nWhat does the bill_depth_mm variable in the penguins data frame describe? Read the help for ?penguins to find out.\n\n\n\n\n\n\nAnswer\n\n\n\nType your answer here.\n\n\nMake a scatterplot of bill_depth_mm vs. bill_length_mm. That is, make a scatterplot with bill_depth_mm on the y-axis and bill_length_mm on the x-axis. Describe the relationship between these two variables.\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your R code here\n\nYour answer here.\n\n\nWhat happens if you make a scatterplot of species vs. bill_depth_mm? What might be a better choice of geom?\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your R code here\n\nYour answer here.\n\n# Your R code here\n\n\n\nWhy does the following give an error and how would you fix it?\n\nlibrary(tidyverse)\nggplot(data = penguins) + \n  geom_point()\n\n\n\n\n\n\n\nAnswer\n\n\n\nYour answer here.\n\n# Correct code here\n\n\n\nWhat does the na.rm argument do in geom_point()? What is the default value of the argument? Create a scatterplot where you successfully use this argument set to TRUE.\n\n\n\n\n\n\nAnswer\n\n\n\nYour answer here.\n\n# Your R code here\n\n\n\nAdd the following caption to the plot you made in the previous exercise: “Data come from the palmerpenguins package.” Hint: Take a look at the documentation for labs().\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your R code here\n\n\n\nRecreate the following visualization. What aesthetic should bill_depth_mm be mapped to? And should it be mapped at the global level or at the geom level?\n\n\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your R Code here\n\nYour answer here.\n\n\nRun this code in your head and predict what the output will look like. Then, run the code in R and check your predictions.\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g, color = island)\n) +\n    geom_point() +\n    geom_smooth(se = FALSE)\n\n\n\n\n\n\n\nAnswer\n\n\n\nYour answer here.\n\n# Your R code here\n\n\n\nWill these two graphs look different? Why/why not?\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point() +\n  geom_smooth()\n\nggplot() +\n  geom_point(\n    data = penguins,\n    mapping = aes(x = flipper_length_mm, y = body_mass_g)\n  ) +\n  geom_smooth(\n    data = penguins,\n    mapping = aes(x = flipper_length_mm, y = body_mass_g)\n  )\n\n\n\n\n\n\n\nAnswer\n\n\n\nYour answer here.\n\nlibrary(patchwork)\n# Your R code here\n\n\n\nMake a bar plot of species of penguins, where you assign species to the y aesthetic. How is this plot different?\n\n\n\n\n\n\nAnswer\n\n\n\nYour answer here.\n\n# Your R code here\n\n\n\nHow are the following two plots different? Which aesthetic, color or fill, is more useful for changing the color of bars?\n\nggplot(penguins, aes(x = species)) +\n  geom_bar(color = \"red\")\n\nggplot(penguins, aes(x = species)) +\n  geom_bar(fill = \"red\")\n\n\n\n\n\n\n\nAnswer\n\n\n\n\nggplot(penguins, aes(x = species)) +\n    geom_bar(color = \"red\") -&gt; p1\n\nggplot(penguins, aes(x = species)) +\n  geom_bar(fill = \"red\") -&gt; p2\np1 + p2\n\n\n\n\nYour answer here.\n\n\nWhat does the bins argument in geom_histogram() do?\n\n\n\n\n\n\nAnswer\n\n\n\nYour answer here.\n\n\nMake a histogram of the carat variable in the diamonds dataset that is available when you load the tidyverse package. Experiment with different binwidths. What binwidth reveals the most interesting patterns?\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your R code here\n\nYour answer here.\n\n\nThe mpg data frame that is bundled with the ggplot2 package contains 234 observations collected by the US Environmental Protection Agency on 38 car models. Which variables in mpg are categorical? Which variables are numerical? (Hint: Type ?mpg to read the documentation for the dataset.) How can you see this information when you run mpg?\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your R code here\n\nYour answer here.\n\n\nMake a scatterplot of hwy vs. displ using the mpg data frame. Next, map a third, numerical variable to color, then size, then both color and size, then shape. How do these aesthetics behave differently for categorical vs. numerical variables?\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your R code here\n\nYour answer here.\n\n\nIn the scatterplot of hwy vs. displ, what happens if you map a third variable to linewidth?\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your R code here\n\nYour answer here.\n\n\nWhat happens if you map the same variable to multiple aesthetics?\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your R code here\n\nYour answer here.\n\n\nMake a scatterplot of bill_depth_mm vs. bill_length_mm and color the points by species. What does adding coloring by species reveal about the relationship between these two variables? What about faceting by species?\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your R code here\n\nYour answer here.\n\n\nWhy does the following yield two separate legends? How would you fix it to combine the two legends?\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_length_mm, y = bill_depth_mm, \n    color = species, shape = species\n  )\n) +\n  geom_point() +\n  labs(color = \"Species\")\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your R fix here\n\nYour answer here.\n\n\nCreate the two following stacked bar plots. Which question can you answer with the first one? Which question can you answer with the second one?\n\nggplot(penguins, aes(x = island, fill = species)) +\n  geom_bar(position = \"fill\")\nggplot(penguins, aes(x = species, fill = island)) +\n  geom_bar(position = \"fill\")\n\n\n\n\n\n\n\nAnswer\n\n\n\n\nggplot(penguins, aes(x = island, fill = species)) +\n  geom_bar(position = \"fill\") -&gt; p1\nggplot(penguins, aes(x = species, fill = island)) +\n  geom_bar(position = \"fill\") -&gt; p2\np1 / p2\n\n\n\n\nYour answer here.\n\n\nRun the following lines of code. Which of the two plots is saved as mpg-plot.png? Why?\n\nggplot(mpg, aes(x = class)) +\n  geom_bar()\nggplot(mpg, aes(x = cty, y = hwy)) +\n  geom_point()\nggsave(\"mpg-plot.png\")\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your R code here\n\nYour answer here.\n\n\nWhat do you need to change in the code above to save the plot as a PDF instead of a PNG? How could you find out what types of image files would work in ggsave()?\n\n\n\n\n\n\nAnswer\n\n\n\nYour answer here."
  },
  {
    "objectID": "CH03.html",
    "href": "CH03.html",
    "title": "",
    "section": "",
    "text": "Exercises (Chapter 3)\n\nIn a single pipeline for each condition, find all flights that meet the condition:\n\nHad an arrival delay of two or more hours\n\n\n\n\n\n\nAnswer\n\n\n\n\nlibrary(tidyverse)\nlibrary(nycflights13)\n# Your code here\n\n\n\nFlew to Houston (IAH or HOU)\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your code here\n\n\n\nWere operated by United, American, or Delta\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your code here\n\n\n\nDeparted in summer (July, August, and September)\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your code here\n\n\n\nArrived more than two hours late, but didn’t leave late.\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your code here\n\n\n\nWere delayed by at least an hour, but made up over 30 minutes in flight\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your code here\n\n\n\n\nSort flights to find the flights with longest departure delays. Find the flights that left earliest in the morning.\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your code here\n\n\n\nSort flights to find the fastest flights. (Hint: Try including a math calculation inside of your function.)\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your code here\n\n\n\nWas there a flight on every day of 2013?\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your code here\n\nYour text answer here.\n\n\nWhich flights traveled the farthest distance? Which traveled the least distance?\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your code here\n\n\n\nDoes it matter what order you used filter() and arrange() if you’re using both? Why/why not? Think about the results and how much work the functions would have to do.\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\nCompare dep_time, sched_dep_time, and dep_delay. How would you expect those three numbers to be related?\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your code here\n\nYour text answer here.\n\n\nBrainstorm as many ways as possible to select dep_time, dep_delay, arr_time, and arr_delay from flights.\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your code here\n\n\n\nWhat happens if you specify the name of the same variable multiple times in a select() call?\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your code here\n\nYour text answer here.\n\n\nWhat does the any_of() function do? Why might it be helpful in conjunction with this vector?\n\nvariables &lt;- c(\"year\", \"month\", \"day\", \"dep_delay\", \"arr_delay\")\n# Try below first\nflights |&gt; \n  select(variables)\n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(variables)\n\n  # Now:\n  data %&gt;% select(all_of(variables))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\n\n# A tibble: 336,776 × 5\n    year month   day dep_delay arr_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1  2013     1     1         2        11\n 2  2013     1     1         4        20\n 3  2013     1     1         2        33\n 4  2013     1     1        -1       -18\n 5  2013     1     1        -6       -25\n 6  2013     1     1        -4        12\n 7  2013     1     1        -5        19\n 8  2013     1     1        -3       -14\n 9  2013     1     1        -3        -8\n10  2013     1     1        -2         8\n# ℹ 336,766 more rows\n\n# Or\nflights |&gt; \n  select(any_of(variables))\n\n# A tibble: 336,776 × 5\n    year month   day dep_delay arr_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1  2013     1     1         2        11\n 2  2013     1     1         4        20\n 3  2013     1     1         2        33\n 4  2013     1     1        -1       -18\n 5  2013     1     1        -6       -25\n 6  2013     1     1        -4        12\n 7  2013     1     1        -5        19\n 8  2013     1     1        -3       -14\n 9  2013     1     1        -3        -8\n10  2013     1     1        -2         8\n# ℹ 336,766 more rows\n\n\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\nDoes the result of running the following code surprise you? How do the select helpers deal with upper and lower case by default? How can you change that default?\n\nflights |&gt; \n  select(contains(\"TIME\"))\n\n\n\n\n\n\n\nAnswer\n\n\n\n\nflights |&gt; \n  select(contains(\"TIME\"))\n\n# A tibble: 336,776 × 6\n   dep_time sched_dep_time arr_time sched_arr_time air_time time_hour          \n      &lt;int&gt;          &lt;int&gt;    &lt;int&gt;          &lt;int&gt;    &lt;dbl&gt; &lt;dttm&gt;             \n 1      517            515      830            819      227 2013-01-01 05:00:00\n 2      533            529      850            830      227 2013-01-01 05:00:00\n 3      542            540      923            850      160 2013-01-01 05:00:00\n 4      544            545     1004           1022      183 2013-01-01 05:00:00\n 5      554            600      812            837      116 2013-01-01 06:00:00\n 6      554            558      740            728      150 2013-01-01 05:00:00\n 7      555            600      913            854      158 2013-01-01 06:00:00\n 8      557            600      709            723       53 2013-01-01 06:00:00\n 9      557            600      838            846      140 2013-01-01 06:00:00\n10      558            600      753            745      138 2013-01-01 06:00:00\n# ℹ 336,766 more rows\n\n\nYour text answer here.\n\n\nRename air_time to air_time_min to indicate units of measurement and move it to the beginning of the data frame.\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your code here\n\n\n\nWhy doesn’t the following work, and what does the error mean?\n\nflights |&gt; \n  select(tailnum) |&gt; \n  arrange(arr_delay)\n\nError in `arrange()`:\nℹ In argument: `..1 = arr_delay`.\nCaused by error:\n! object 'arr_delay' not found\n\n\n\nflights |&gt; \n  select(tailnum)\n\n# A tibble: 336,776 × 1\n   tailnum\n   &lt;chr&gt;  \n 1 N14228 \n 2 N24211 \n 3 N619AA \n 4 N804JB \n 5 N668DN \n 6 N39463 \n 7 N516JB \n 8 N829AS \n 9 N593JB \n10 N3ALAA \n# ℹ 336,766 more rows\n\n\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\nWhich carrier has the worst average delays? Challenge: can you disentangle the effects of bad airports vs. bad carriers? Why/why not? (Hint: think about flights |&gt; group_by(carrier, dest) |&gt; summarize(n()))\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your code here\n\nYour text answer here.\n\n\nFind the flights that are most delayed upon departure from each destination.\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your code here\n\nYour text answer here.\n\n\nHow do delays vary over the course of the day. Illustrate your answer with a plot.\n\n\n\n\n\n\nAnswer\n\n\n\n\n# Your code here\n\nYour text answer here.\n\n\nWhat happens if you supply a negative n to slice_min() and friends?\n\n\n\n\n\n\nAnswer\n\n\n\n\nflights |&gt; \n  slice_min(dep_delay, n = -5) |&gt;\n  relocate(dep_delay)\n\n# A tibble: 336,776 × 19\n   dep_delay  year month   day dep_time sched_dep_time arr_time sched_arr_time\n       &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;    &lt;int&gt;          &lt;int&gt;\n 1       -43  2013    12     7     2040           2123       40           2352\n 2       -33  2013     2     3     2022           2055     2240           2338\n 3       -32  2013    11    10     1408           1440     1549           1559\n 4       -30  2013     1    11     1900           1930     2233           2243\n 5       -27  2013     1    29     1703           1730     1947           1957\n 6       -26  2013     8     9      729            755     1002            955\n 7       -25  2013    10    23     1907           1932     2143           2143\n 8       -25  2013     3    30     2030           2055     2213           2250\n 9       -24  2013     3     2     1431           1455     1601           1631\n10       -24  2013     5     5      934            958     1225           1309\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights |&gt; \n  slice_min(dep_delay, n = 5) |&gt;\n  relocate(dep_delay)\n\n# A tibble: 5 × 19\n  dep_delay  year month   day dep_time sched_dep_time arr_time sched_arr_time\n      &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;    &lt;int&gt;          &lt;int&gt;\n1       -43  2013    12     7     2040           2123       40           2352\n2       -33  2013     2     3     2022           2055     2240           2338\n3       -32  2013    11    10     1408           1440     1549           1559\n4       -30  2013     1    11     1900           1930     2233           2243\n5       -27  2013     1    29     1703           1730     1947           1957\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights |&gt; \n  slice_max(dep_delay, n = -5) |&gt;\n  relocate(dep_delay)\n\n# A tibble: 336,776 × 19\n   dep_delay  year month   day dep_time sched_dep_time arr_time sched_arr_time\n       &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;    &lt;int&gt;          &lt;int&gt;\n 1      1301  2013     1     9      641            900     1242           1530\n 2      1137  2013     6    15     1432           1935     1607           2120\n 3      1126  2013     1    10     1121           1635     1239           1810\n 4      1014  2013     9    20     1139           1845     1457           2210\n 5      1005  2013     7    22      845           1600     1044           1815\n 6       960  2013     4    10     1100           1900     1342           2211\n 7       911  2013     3    17     2321            810      135           1020\n 8       899  2013     6    27      959           1900     1236           2226\n 9       898  2013     7    22     2257            759      121           1026\n10       896  2013    12     5      756           1700     1058           2020\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights |&gt; \n  slice_max(dep_delay, n = 5) |&gt;\n  relocate(dep_delay)\n\n# A tibble: 5 × 19\n  dep_delay  year month   day dep_time sched_dep_time arr_time sched_arr_time\n      &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;    &lt;int&gt;          &lt;int&gt;\n1      1301  2013     1     9      641            900     1242           1530\n2      1137  2013     6    15     1432           1935     1607           2120\n3      1126  2013     1    10     1121           1635     1239           1810\n4      1014  2013     9    20     1139           1845     1457           2210\n5      1005  2013     7    22      845           1600     1044           1815\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nYour text answer here.\n\n\nExplain what count() does in terms of the dplyr verbs you just learned. What does the sort argument to count() do?\n\n\n\n\n\n\nAnswer\n\n\n\n\nflights |&gt; \n  count(origin, dest, sort = FALSE) # sort = FALSE by   default\n\n# A tibble: 224 × 3\n   origin dest      n\n   &lt;chr&gt;  &lt;chr&gt; &lt;int&gt;\n 1 EWR    ALB     439\n 2 EWR    ANC       8\n 3 EWR    ATL    5022\n 4 EWR    AUS     968\n 5 EWR    AVL     265\n 6 EWR    BDL     443\n 7 EWR    BNA    2336\n 8 EWR    BOS    5327\n 9 EWR    BQN     297\n10 EWR    BTV     931\n# ℹ 214 more rows\n\nflights |&gt; \n  count(origin, dest, sort = TRUE)\n\n# A tibble: 224 × 3\n   origin dest      n\n   &lt;chr&gt;  &lt;chr&gt; &lt;int&gt;\n 1 JFK    LAX   11262\n 2 LGA    ATL   10263\n 3 LGA    ORD    8857\n 4 JFK    SFO    8204\n 5 LGA    CLT    6168\n 6 EWR    ORD    6100\n 7 JFK    BOS    5898\n 8 LGA    MIA    5781\n 9 JFK    MCO    5464\n10 EWR    BOS    5327\n# ℹ 214 more rows\n\n\nYour text answer here.\n\n\nSuppose we have the following tiny data frame:\n\ndf &lt;- tibble(\n  x = 1:5,\n  y = c(\"a\", \"b\", \"a\", \"a\", \"b\"),\n  z = c(\"K\", \"K\", \"L\", \"L\", \"K\")\n)\n\n\n\nWrite down what you think the output will look like, then check if you were correct, and describe what group_by() does.\n\ndf |&gt;\n  group_by(y)\n\n\n\n\n\n\n\nAnswer\n\n\n\n\ndf |&gt;\n  group_by(y)\n\n# A tibble: 5 × 3\n# Groups:   y [2]\n      x y     z    \n  &lt;int&gt; &lt;chr&gt; &lt;chr&gt;\n1     1 a     K    \n2     2 b     K    \n3     3 a     L    \n4     4 a     L    \n5     5 b     K    \n\n\nYour text answer here.\n\n\nWrite down what you think the output will look like, then check if you were correct, and describe what arrange() does. Also comment on how it’s different from the group_by() in part (a).\n\ndf |&gt;\n  arrange(y)\n\n\n\n\n\n\n\nAnswer\n\n\n\n\ndf |&gt;\n  arrange(y)\n\n# A tibble: 5 × 3\n      x y     z    \n  &lt;int&gt; &lt;chr&gt; &lt;chr&gt;\n1     1 a     K    \n2     3 a     L    \n3     4 a     L    \n4     2 b     K    \n5     5 b     K    \n\n\nYour text answer here.\n\n\nWrite down what you think the output will look like, then check if you were correct, and describe what the pipeline does.\n\ndf |&gt;\n  group_by(y) |&gt;\n  summarize(mean_x = mean(x))\n\n\n\n\n\n\n\nAnswer\n\n\n\n\ndf |&gt;\n  group_by(y) |&gt;\n  summarize(mean_x = mean(x))\n\n# A tibble: 2 × 2\n  y     mean_x\n  &lt;chr&gt;  &lt;dbl&gt;\n1 a       2.67\n2 b       3.5 \n\n\nYour text answer here.\n\n\nWrite down what you think the output will look like, then check if you were correct, and describe what the pipeline does. Then, comment on what the message says.\n\ndf |&gt;\n  group_by(y, z) |&gt;\n  summarize(mean_x = mean(x))\n\n\n\n\n\n\n\nAnswer\n\n\n\n\ndf |&gt;\n  group_by(y, z) |&gt;\n  summarize(mean_x = mean(x))\n\n`summarise()` has grouped output by 'y'. You can override using the `.groups`\nargument.\n\n\n# A tibble: 3 × 3\n# Groups:   y [2]\n  y     z     mean_x\n  &lt;chr&gt; &lt;chr&gt;  &lt;dbl&gt;\n1 a     K        1  \n2 a     L        3.5\n3 b     K        3.5\n\n\nYour text answer here.\n\n\nWrite down what you think the output will look like, then check if you were correct, and describe what the pipeline does. How is the output different from the one in part (d)?\n\ndf |&gt;\n  group_by(y, z) |&gt;\n  summarize(mean_x = mean(x), .groups = \"drop\")\n\n\n\n\n\n\n\nAnswer\n\n\n\n\ndf |&gt;\n  group_by(y, z) |&gt;\n  summarize(mean_x = mean(x), .groups = \"drop\")\n\n# A tibble: 3 × 3\n  y     z     mean_x\n  &lt;chr&gt; &lt;chr&gt;  &lt;dbl&gt;\n1 a     K        1  \n2 a     L        3.5\n3 b     K        3.5\n\n\nYour text answer here.\n\n\nWrite down what you think the outputs will look like, then check if you were correct, and describe what each pipeline does. How are the outputs of the two pipelines different?\n\ndf |&gt;\n  group_by(y, z) |&gt;\n  summarize(mean_x = mean(x))\n\ndf |&gt;\n  group_by(y, z) |&gt;\n  mutate(mean_x = mean(x))\n\n\n\n\n\n\n\nAnswer\n\n\n\n\ndf |&gt;\n  group_by(y, z) |&gt;\n  summarize(mean_x = mean(x))\n\n`summarise()` has grouped output by 'y'. You can override using the `.groups`\nargument.\n\n\n# A tibble: 3 × 3\n# Groups:   y [2]\n  y     z     mean_x\n  &lt;chr&gt; &lt;chr&gt;  &lt;dbl&gt;\n1 a     K        1  \n2 a     L        3.5\n3 b     K        3.5\n\ndf |&gt;\n  group_by(y, z) |&gt;\n  mutate(mean_x = mean(x))\n\n# A tibble: 5 × 4\n# Groups:   y, z [3]\n      x y     z     mean_x\n  &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  &lt;dbl&gt;\n1     1 a     K        1  \n2     2 b     K        3.5\n3     3 a     L        3.5\n4     4 a     L        3.5\n5     5 b     K        3.5\n\n\nYour text answer here."
  },
  {
    "objectID": "CH05.html",
    "href": "CH05.html",
    "title": "",
    "section": "",
    "text": "Exercises (Chapter 5)\n\n\n\n\n\n\nTables\n\n\n\n\ntable1\n\n# A tibble: 6 × 4\n  country      year  cases population\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n\ntable2\n\n# A tibble: 12 × 4\n   country      year type            count\n   &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;           &lt;dbl&gt;\n 1 Afghanistan  1999 cases             745\n 2 Afghanistan  1999 population   19987071\n 3 Afghanistan  2000 cases            2666\n 4 Afghanistan  2000 population   20595360\n 5 Brazil       1999 cases           37737\n 6 Brazil       1999 population  172006362\n 7 Brazil       2000 cases           80488\n 8 Brazil       2000 population  174504898\n 9 China        1999 cases          212258\n10 China        1999 population 1272915272\n11 China        2000 cases          213766\n12 China        2000 population 1280428583\n\ntable3\n\n# A tibble: 6 × 3\n  country      year rate             \n  &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;            \n1 Afghanistan  1999 745/19987071     \n2 Afghanistan  2000 2666/20595360    \n3 Brazil       1999 37737/172006362  \n4 Brazil       2000 80488/174504898  \n5 China        1999 212258/1272915272\n6 China        2000 213766/1280428583\n\n\n\n\n\nFor each of the sample tables, describe what each observation and each column represents.\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\nSketch out the process you’d use to calculate the rate for table2 and table3. You will need to perform four operations:\n\nExtract the number of TB cases per country per year.\nExtract the matching population per country per year.\nDivide cases by population, and multiply by 10000.\nStore back in the appropriate place.\n\nYou haven’t yet learned all the functions you’d need to actually perform these operations, but you should still be able to think through the transformations you’d need.\n\n\n\n\n\n\nAnswer\n\n\n\n\ntable2 |&gt;\n  pivot_wider(names_from = type,\n              values_from = count) |&gt;\n  mutate(rate = cases / population * 10000)\n\n# A tibble: 6 × 5\n  country      year  cases population  rate\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071 0.373\n2 Afghanistan  2000   2666   20595360 1.29 \n3 Brazil       1999  37737  172006362 2.19 \n4 Brazil       2000  80488  174504898 4.61 \n5 China        1999 212258 1272915272 1.67 \n6 China        2000 213766 1280428583 1.67 \n\n#\ntable3 |&gt;\n  separate_wider_delim(\n    cols = rate,\n    delim = \"/\",\n    names = c(\"cases\", \"population\"),\n  ) |&gt;\n  mutate(\n    cases = as.numeric(cases),\n    population = as.numeric(population),\n    rate = cases / population * 10000\n  )\n\n# A tibble: 6 × 5\n  country      year  cases population  rate\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071 0.373\n2 Afghanistan  2000   2666   20595360 1.29 \n3 Brazil       1999  37737  172006362 2.19 \n4 Brazil       2000  80488  174504898 4.61 \n5 China        1999 212258 1272915272 1.67 \n6 China        2000 213766 1280428583 1.67 \n\n\nFor table2, we need to reshape the data to have a column for cases and a column for population and then divide the two to calculate the rate. A possible approach is shown above.\nFor table3, we need to separate cases and population into their own columns and then divide them. A possible approach is shown above."
  },
  {
    "objectID": "CH07.html",
    "href": "CH07.html",
    "title": "",
    "section": "",
    "text": "Exercises (Chapter 7)\n\nWhat function would you use to read a file where fields were separated with “|”?\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\nApart from file, skip, and comment, what other arguments do read_csv() and read_tsv() have in common?\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\nWhat are the most important arguments to read_fwf()?\n\n\n\n\n\n\nAnswer\n\n\n\nYour text answer here.\n\n\nSometimes strings in a CSV file contain commas. To prevent them from causing problems, they need to be surrounded by a quoting character, like \" or '. By default, read_csv() assumes that the quoting character will be \". To read the following text into a data frame, what argument to read_csv() do you need to specify?\n\n\"x,y\\n1,'a,b'\"\n\n\n\n\n\n\n\nAnswer\n\n\n\nWe need to specify the quote argument.\n\nread_csv(\"x,y\\n1,'a,b'\", quote = \"\\'\")\n\nRows: 1 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): y\ndbl (1): x\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 1 × 2\n      x y    \n  &lt;dbl&gt; &lt;chr&gt;\n1     1 a,b  \n\n\n\n\nIdentify what is wrong with each of the following inline CSV files. What happens when you run the code?\n\nread_csv(\"a,b\\n1,2,3\\n4,5,6\")\nread_csv(\"a,b,c\\n1,2\\n1,2,3,4\")\nread_csv(\"a,b\\n\\\"1\")\nread_csv(\"a,b\\n1,2\\na,b\")\nread_csv(\"a;b\\n1;3\")\n\n\n\n\n\n\n\nAnswer\n\n\n\n\nread_csv(\"a,b\\n1,2,3\\n4,5,6\")\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 2 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (1): a\nnum (1): b\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 2 × 2\n      a     b\n  &lt;dbl&gt; &lt;dbl&gt;\n1     1    23\n2     4    56\n\n\nThere are only two column headers but three values in each row, so the last two get merged.\n\n\n\n\n\n\n\n\nAnswer\n\n\n\n\nread_csv(\"a,b,c\\n1,2\\n1,2,3,4\")\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 2 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (2): a, b\nnum (1): c\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 2 × 3\n      a     b     c\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     1     2    NA\n2     1     2    34\n\n\nhere are only three column headers, first row is missing a value in the last column so gets an NA there, the second row has four values so the last two get merge\n\n\n\n\n\n\n\n\nAnswer\n\n\n\n\nread_csv(\"a,b\\n\\\"1\")\n\nRows: 0 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): a, b\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 0 × 2\n# ℹ 2 variables: a &lt;chr&gt;, b &lt;chr&gt;\n\n\nNo rows are read in.\n\n\n\n\n\n\n\n\nAnswer\n\n\n\n\nread_csv(\"a,b\\n1,2\\na,b\")\n\nRows: 2 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): a, b\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 2 × 2\n  a     b    \n  &lt;chr&gt; &lt;chr&gt;\n1 1     2    \n2 a     b    \n\n\nEach column has a numerical and a character value, so the column type is coerced to character.\n\n\n\n\n\n\n\n\nAnswer\n\n\n\n\nread_csv(\"a;b\\n1;3\")\n\nRows: 1 Columns: 1\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): a;b\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 1 × 1\n  `a;b`\n  &lt;chr&gt;\n1 1;3  \n\n\nThe delimiter is ; but it’s not specified, therefore this is read in as a single-column data frame with a single observation.\n\n\nPractice referring to non-syntactic names in the following data frame by:\n\nset.seed(321)\nannoying &lt;- tibble(\n  `1` = 1:10,\n  `2` = `1` * 2 + rnorm(length(`1`))\n)\n\n\nExtracting the variable called 1.\n\n\n\n\n\n\nAnswer\n\n\n\n\nannoying |&gt; \n  select(`1`)\n\n# A tibble: 10 × 1\n     `1`\n   &lt;int&gt;\n 1     1\n 2     2\n 3     3\n 4     4\n 5     5\n 6     6\n 7     7\n 8     8\n 9     9\n10    10\n\n# or\nannoying$`1`\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\n\n\n\nPlotting a scatterplot of 1 vs. 2.\n\n\n\n\n\n\nAnswer\n\n\n\n\nannoying |&gt; \n  ggplot(aes(x = `2`, y = `1`)) + \n    geom_point()\n\n\n\n\n\n\nCreating a new column called 3, which is 2 divided by 1.\n\n\n\n\n\n\nAnswer\n\n\n\n\nannoying |&gt; \n  mutate(`3` = `2`/`1`)\n\n# A tibble: 10 × 3\n     `1`   `2`   `3`\n   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     1  3.70  3.70\n 2     2  3.29  1.64\n 3     3  5.72  1.91\n 4     4  7.88  1.97\n 5     5  9.88  1.98\n 6     6 12.3   2.04\n 7     7 14.7   2.10\n 8     8 16.2   2.03\n 9     9 18.3   2.04\n10    10 19.4   1.94\n\n\n\n\nRenaming the columns to one, two, and three.\n\n\n\n\n\n\nAnswer\n\n\n\n\nannoying |&gt; \n  mutate(`3` = `2`/`1`) |&gt; \n    rename(\n    \"one\" = `1`,\n    \"two\" = `2`,\n    \"three\" = `3`\n    )\n\n# A tibble: 10 × 3\n     one   two three\n   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     1  3.70  3.70\n 2     2  3.29  1.64\n 3     3  5.72  1.91\n 4     4  7.88  1.97\n 5     5  9.88  1.98\n 6     6 12.3   2.04\n 7     7 14.7   2.10\n 8     8 16.2   2.03\n 9     9 18.3   2.04\n10    10 19.4   1.94"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Preface",
    "section": "",
    "text": "Preface\nThis document takes selected Exercises from R for Data Science (2e) and puts them in a Quarto book so you can modify the files to add your answers to the questions.\nTo learn more about Quarto books please visit https://quarto.org/docs/books."
  }
]